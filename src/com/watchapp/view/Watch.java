/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.watchapp.view;

import javax.swing.Timer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.watchapp.util.ValidationUtil;
import com.watchapp.model.WatchIS;
import java.util.LinkedList;
import java.util.List;
import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import com.watchapp.controller.algorithm.SelectionSort;
import com.watchapp.controller.algorithm.MergeSort;
import com.watchapp.controller.algorithm.BinarySearch;

/**
 *
 * @author Santoshi Paudel LMU ID: 23048656
 */
public class Watch extends javax.swing.JFrame {

    private List<WatchIS> watchIS;
    private java.awt.CardLayout cardLayout;
    private final ValidationUtil validationUtil;
    private final SelectionSort selectionSort;
    private final MergeSort mergeSort;
    private final BinarySearch binarySearch;

    public Watch() {
        initComponents();
        validationUtil = new ValidationUtil();
        initializeLayout(); // Set up CardLayout and add screens
        initializeWatchData(); // Initialize watch data
        Progress(); // Show loading screen and initiate progress
        selectionSort = new SelectionSort();
        mergeSort = new MergeSort();
        binarySearch = new BinarySearch();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLoginScreen = new javax.swing.JPanel();
        pnlLoginImage = new javax.swing.JPanel();
        lblLoginImage = new javax.swing.JLabel();
        lblLoginTitle = new javax.swing.JLabel();
        lblLoginDesc = new javax.swing.JLabel();
        txtFldUserName = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        ckBoxRemember = new javax.swing.JCheckBox();
        lblForgotPassword = new javax.swing.JLabel();
        pnlLoginLogo = new javax.swing.JPanel();
        lblLoginLogoImage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pwdFldPassword = new javax.swing.JPasswordField();
        pnlWatchInfoScreen = new javax.swing.JPanel();
        pnlMainBar = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        lblInfoscreenLogo = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        tabPaneWatchInfo = new javax.swing.JTabbedPane();
        pnlHome = new javax.swing.JPanel();
        pnlHomeDetails = new javax.swing.JPanel();
        lblHomeWording = new javax.swing.JLabel();
        lblHomeWording1 = new javax.swing.JLabel();
        lblHomeWording2 = new javax.swing.JLabel();
        lblHomeWording4 = new javax.swing.JLabel();
        lblhomeWording5 = new javax.swing.JLabel();
        lblHomeImage = new javax.swing.JLabel();
        lblWatchImage = new javax.swing.JLabel();
        lblHomeWatchImage = new javax.swing.JLabel();
        lblWatchImageHome = new javax.swing.JLabel();
        lblTimex = new javax.swing.JLabel();
        lblMatteWork = new javax.swing.JLabel();
        lbl5k = new javax.swing.JLabel();
        lblWarranty = new javax.swing.JLabel();
        lblYears = new javax.swing.JLabel();
        lblSale = new javax.swing.JLabel();
        lblCopyright = new javax.swing.JLabel();
        pnlAboutUs = new javax.swing.JPanel();
        lblAboutUsWording = new javax.swing.JLabel();
        lblAboutUsHeading = new javax.swing.JLabel();
        lblAboutUsWording1 = new javax.swing.JLabel();
        lblAboutUsWording2 = new javax.swing.JLabel();
        lblAboutUsWording3 = new javax.swing.JLabel();
        lblAboutUsWording4 = new javax.swing.JLabel();
        lblAboutUsWording5 = new javax.swing.JLabel();
        lblAboutUsWording6 = new javax.swing.JLabel();
        lblAboutUsImage = new javax.swing.JLabel();
        lblExperiences = new javax.swing.JLabel();
        lblExperiences1 = new javax.swing.JLabel();
        lblCopyright1 = new javax.swing.JLabel();
        pnlWatchCollections = new javax.swing.JPanel();
        lblWatchdetails = new javax.swing.JLabel();
        scrlPaneWatchInfo = new javax.swing.JScrollPane();
        scrlPaneWatchDetails = new javax.swing.JScrollPane();
        tblWatchInfo = new javax.swing.JTable();
        pnlForm = new javax.swing.JPanel();
        tfSerialNumber = new javax.swing.JTextField();
        tfModelNumber = new javax.swing.JTextField();
        tfName = new javax.swing.JTextField();
        lblForm = new javax.swing.JLabel();
        tfBrand = new javax.swing.JTextField();
        tfPrice = new javax.swing.JTextField();
        tfWarranty = new javax.swing.JTextField();
        btnAddWatch = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnDisplay = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        pnlAddUpdateDelete = new javax.swing.JPanel();
        btnMergeSortBySerialNumber = new javax.swing.JButton();
        btnSelectionSortByPrice = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        lblErrorMessage = new javax.swing.JLabel();
        txtFldSearch = new javax.swing.JTextField();
        pnlContactUs = new javax.swing.JPanel();
        lblContactImage = new javax.swing.JLabel();
        lblContactHeading = new javax.swing.JLabel();
        pnlContact = new javax.swing.JPanel();
        txtFldName = new javax.swing.JTextField();
        txtFldEmail = new javax.swing.JTextField();
        lblContactFill = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TxtAreaMessage = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        pnlMainScreen = new javax.swing.JPanel();
        lblLogoImage = new javax.swing.JLabel();
        pgBarSplashScreen = new javax.swing.JProgressBar();
        lblWelcomePage = new javax.swing.JLabel();
        lblWait = new javax.swing.JLabel();
        lblWelcomeDescription = new javax.swing.JLabel();
        lblMotto = new javax.swing.JLabel();

        pnlLoginScreen.setBackground(new java.awt.Color(255, 255, 255));
        pnlLoginScreen.setMaximumSize(new java.awt.Dimension(1000, 1000));
        pnlLoginScreen.setPreferredSize(new java.awt.Dimension(1000, 1000));
        pnlLoginScreen.setSize(new java.awt.Dimension(1000, 1000));

        pnlLoginImage.setBackground(new java.awt.Color(255, 255, 255));

        lblLoginImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WatchIS/resources/homeWatch.jpg"))); // NOI18N

        javax.swing.GroupLayout pnlLoginImageLayout = new javax.swing.GroupLayout(pnlLoginImage);
        pnlLoginImage.setLayout(pnlLoginImageLayout);
        pnlLoginImageLayout.setHorizontalGroup(
            pnlLoginImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblLoginImage, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlLoginImageLayout.setVerticalGroup(
            pnlLoginImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginImageLayout.createSequentialGroup()
                .addComponent(lblLoginImage)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        lblLoginTitle.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        lblLoginTitle.setForeground(new java.awt.Color(3, 37, 76));
        lblLoginTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginTitle.setText("SIGN IN");

        lblLoginDesc.setBackground(new java.awt.Color(0, 0, 0));
        lblLoginDesc.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblLoginDesc.setForeground(new java.awt.Color(0, 102, 204));
        lblLoginDesc.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblLoginDesc.setText("Please Fill Your Details Below To Login To Our Page ");

        txtFldUserName.setBackground(new java.awt.Color(3, 37, 76));
        txtFldUserName.setForeground(new java.awt.Color(255, 255, 255));
        txtFldUserName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtFldUserName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Username", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("ITF Devanagari", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        txtFldUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldUserNameActionPerformed(evt);
            }
        });

        btnLogin.setBackground(new java.awt.Color(233, 177, 8));
        btnLogin.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(0, 51, 153));
        btnLogin.setText("LOGIN");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        ckBoxRemember.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        ckBoxRemember.setForeground(new java.awt.Color(3, 37, 76));
        ckBoxRemember.setText("Remember Me");
        ckBoxRemember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBoxRememberActionPerformed(evt);
            }
        });

        lblForgotPassword.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblForgotPassword.setForeground(new java.awt.Color(0, 51, 102));
        lblForgotPassword.setText("Forgot Password?");

        pnlLoginLogo.setBackground(new java.awt.Color(255, 255, 255));
        pnlLoginLogo.setForeground(new java.awt.Color(255, 153, 0));

        lblLoginLogoImage.setFont(new java.awt.Font("Herculanum", 1, 24)); // NOI18N
        lblLoginLogoImage.setForeground(new java.awt.Color(3, 37, 76));
        lblLoginLogoImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginLogoImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WatchIS/resources/Watch copy 2.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Herculanum", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("\"Your Wrist Deserves the Best\"");

        javax.swing.GroupLayout pnlLoginLogoLayout = new javax.swing.GroupLayout(pnlLoginLogo);
        pnlLoginLogo.setLayout(pnlLoginLogoLayout);
        pnlLoginLogoLayout.setHorizontalGroup(
            pnlLoginLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLogoLayout.createSequentialGroup()
                .addComponent(lblLoginLogoImage, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLoginLogoLayout.setVerticalGroup(
            pnlLoginLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLogoLayout.createSequentialGroup()
                .addComponent(lblLoginLogoImage, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlLoginLogoLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pwdFldPassword.setBackground(new java.awt.Color(3, 37, 76));
        pwdFldPassword.setForeground(new java.awt.Color(255, 255, 255));
        pwdFldPassword.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("ITF Devanagari Marathi", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        javax.swing.GroupLayout pnlLoginScreenLayout = new javax.swing.GroupLayout(pnlLoginScreen);
        pnlLoginScreen.setLayout(pnlLoginScreenLayout);
        pnlLoginScreenLayout.setHorizontalGroup(
            pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                .addComponent(pnlLoginImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                            .addGap(159, 159, 159)
                            .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                                    .addComponent(ckBoxRemember, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(157, 157, 157)
                                    .addComponent(lblForgotPassword))
                                .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                                    .addGap(19, 19, 19)
                                    .addComponent(lblLoginDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(pwdFldPassword, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFldUserName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE))))
                        .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pnlLoginLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginScreenLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(216, 216, 216)))
                    .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(lblLoginTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 637, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLoginScreenLayout.setVerticalGroup(
            pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoginImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                .addComponent(pnlLoginLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(lblLoginTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLoginDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(txtFldUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pwdFldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblForgotPassword)
                    .addComponent(ckBoxRemember))
                .addGap(45, 45, 45)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlWatchInfoScreen.setBackground(new java.awt.Color(3, 37, 76));
        pnlWatchInfoScreen.setBounds(new java.awt.Rectangle(0, 0, 1000, 1500));
        pnlWatchInfoScreen.setMaximumSize(new java.awt.Dimension(1000, 1500));
        pnlWatchInfoScreen.setPreferredSize(new java.awt.Dimension(1000, 1500));

        pnlMainBar.setBackground(new java.awt.Color(255, 255, 255));

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WatchIS/resources/Watch copy 2.png"))); // NOI18N

        lblInfoscreenLogo.setFont(new java.awt.Font("Sukhumvit Set", 1, 36)); // NOI18N
        lblInfoscreenLogo.setForeground(new java.awt.Color(255, 153, 51));
        lblInfoscreenLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInfoscreenLogo.setText("\"Your Wrist Deserves The Best\"");

        btnLogOut.setBackground(new java.awt.Color(0, 102, 153));
        btnLogOut.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainBarLayout = new javax.swing.GroupLayout(pnlMainBar);
        pnlMainBar.setLayout(pnlMainBarLayout);
        pnlMainBarLayout.setHorizontalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInfoscreenLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 935, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogOut)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMainBarLayout.setVerticalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainBarLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMainBarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMainBarLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblInfoscreenLogo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabPaneWatchInfo.setBackground(new java.awt.Color(3, 37, 76));
        tabPaneWatchInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabPaneWatchInfo.setForeground(new java.awt.Color(255, 255, 255));
        tabPaneWatchInfo.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabPaneWatchInfo.setAlignmentX(2.0F);
        tabPaneWatchInfo.setAlignmentY(2.0F);
        tabPaneWatchInfo.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N

        pnlHome.setBackground(new java.awt.Color(3, 37, 76));

        pnlHomeDetails.setBackground(new java.awt.Color(3, 37, 76));

        lblHomeWording.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        lblHomeWording.setForeground(new java.awt.Color(255, 153, 0));
        lblHomeWording.setText("Explore");

        lblHomeWording1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        lblHomeWording1.setForeground(new java.awt.Color(255, 255, 255));
        lblHomeWording1.setText("The");

        lblHomeWording2.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblHomeWording2.setForeground(new java.awt.Color(255, 255, 255));
        lblHomeWording2.setText("with Exceptional Accuracy.");

        lblHomeWording4.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblHomeWording4.setForeground(new java.awt.Color(255, 255, 255));
        lblHomeWording4.setText("High-Precision Timepieces that Blend elegence");

        lblhomeWording5.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblhomeWording5.setForeground(new java.awt.Color(255, 255, 255));
        lblhomeWording5.setText("High range of designer watches for both men and women.");

        lblHomeImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WatchIS/resources/canva-MAEnaWCLE-0.png"))); // NOI18N

        lblWatchImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WatchIS/resources/Untitled design.jpg"))); // NOI18N
        lblWatchImage.setText("Timex");
        lblWatchImage.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        lblHomeWatchImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WatchIS/resources/Untitled design copy 2.jpg"))); // NOI18N

        lblWatchImageHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WatchIS/resources/Untitled design copy 3.jpg"))); // NOI18N

        lblTimex.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lblTimex.setForeground(new java.awt.Color(255, 255, 255));
        lblTimex.setText("Timex");

        lblMatteWork.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lblMatteWork.setForeground(new java.awt.Color(255, 255, 255));
        lblMatteWork.setText("Matte Work");

        lbl5k.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lbl5k.setForeground(new java.awt.Color(255, 255, 255));
        lbl5k.setText("Breitling");

        lblWarranty.setFont(new java.awt.Font("Herculanum", 1, 18)); // NOI18N
        lblWarranty.setForeground(new java.awt.Color(255, 255, 255));
        lblWarranty.setText("satisfiedcustomers         Warranty");

        lblYears.setFont(new java.awt.Font("Herculanum", 1, 24)); // NOI18N
        lblYears.setForeground(new java.awt.Color(255, 255, 255));
        lblYears.setText("5K+           |    3 Years");

        lblSale.setFont(new java.awt.Font("Luminari", 1, 18)); // NOI18N
        lblSale.setForeground(new java.awt.Color(255, 153, 0));
        lblSale.setText("Sale+     Luxury Watches+       Accessories+");

        lblCopyright.setForeground(new java.awt.Color(204, 102, 0));
        lblCopyright.setText("@WatchX. ALL RIGHTS RESERVED");

        javax.swing.GroupLayout pnlHomeDetailsLayout = new javax.swing.GroupLayout(pnlHomeDetails);
        pnlHomeDetails.setLayout(pnlHomeDetailsLayout);
        pnlHomeDetailsLayout.setHorizontalGroup(
            pnlHomeDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                .addGroup(pnlHomeDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(pnlHomeDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                                .addComponent(lblHomeWording)
                                .addGap(18, 18, 18)
                                .addComponent(lblHomeWording1))
                            .addComponent(lblHomeWording2)
                            .addComponent(lblhomeWording5)
                            .addComponent(lblHomeWording4)
                            .addComponent(lblSale, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblWatchImage, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(lblHomeWatchImage)
                        .addGap(30, 30, 30)
                        .addComponent(lblWatchImageHome)))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlHomeDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(lblYears, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(pnlHomeDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblWarranty, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHomeImage, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                .addGroup(pnlHomeDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(lblTimex, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(275, 275, 275)
                        .addComponent(lbl5k, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145)
                        .addComponent(lblMatteWork, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                        .addGap(577, 577, 577)
                        .addComponent(lblCopyright)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHomeDetailsLayout.setVerticalGroup(
            pnlHomeDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                .addGroup(pnlHomeDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                        .addComponent(lblHomeImage, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(lblYears)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblWarranty)
                        .addGap(0, 49, Short.MAX_VALUE))
                    .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                        .addGroup(pnlHomeDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(lblHomeWording1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHomeDetailsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblHomeWording)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHomeWording4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHomeWording2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblhomeWording5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSale)
                        .addGap(57, 57, 57)
                        .addGroup(pnlHomeDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblWatchImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHomeWatchImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlHomeDetailsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblWatchImageHome, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(pnlHomeDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimex)
                    .addComponent(lbl5k)
                    .addComponent(lblMatteWork))
                .addGap(47, 47, 47)
                .addComponent(lblCopyright)
                .addGap(1745, 1745, 1745))
        );

        javax.swing.GroupLayout pnlHomeLayout = new javax.swing.GroupLayout(pnlHome);
        pnlHome.setLayout(pnlHomeLayout);
        pnlHomeLayout.setHorizontalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlHomeDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(66, 66, 66))
        );
        pnlHomeLayout.setVerticalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHomeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlHomeDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabPaneWatchInfo.addTab("Home", pnlHome);

        pnlAboutUs.setBackground(new java.awt.Color(3, 37, 76));

        lblAboutUsWording.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 18)); // NOI18N
        lblAboutUsWording.setForeground(new java.awt.Color(255, 153, 0));
        lblAboutUsWording.setText("Safe, Versatile and Effecient Platform.");

        lblAboutUsHeading.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 36)); // NOI18N
        lblAboutUsHeading.setForeground(new java.awt.Color(255, 255, 255));
        lblAboutUsHeading.setText("About Us");

        lblAboutUsWording1.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 18)); // NOI18N
        lblAboutUsWording1.setForeground(new java.awt.Color(255, 255, 255));
        lblAboutUsWording1.setText("The watches provides full satisfaction to our customer with quality assurance. From our carefully selected materials   ");

        lblAboutUsWording2.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 18)); // NOI18N
        lblAboutUsWording2.setForeground(new java.awt.Color(255, 255, 255));
        lblAboutUsWording2.setText("At WatchX, You will find watches crafted to unites Classic elegence with precision and excellence.");

        lblAboutUsWording3.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 18)); // NOI18N
        lblAboutUsWording3.setForeground(new java.awt.Color(255, 255, 255));
        lblAboutUsWording3.setText("Every piece of creation tells a unique story blending innovation and tradition to offer more than just a watch. ");

        lblAboutUsWording4.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 18)); // NOI18N
        lblAboutUsWording4.setForeground(new java.awt.Color(255, 153, 0));
        lblAboutUsWording4.setText("Welcome to world of WatchX,where tradition meets innovations.");

        lblAboutUsWording5.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 18)); // NOI18N
        lblAboutUsWording5.setForeground(new java.awt.Color(255, 255, 255));
        lblAboutUsWording5.setText("to the fine details in every movement, we are committed to quality and excellence. ");

        lblAboutUsWording6.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 18)); // NOI18N
        lblAboutUsWording6.setForeground(new java.awt.Color(255, 255, 255));
        lblAboutUsWording6.setText("It is a Lifelong Companion.");

        lblAboutUsImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WatchIS/resources/canva-MAB-3k8i4eo.png"))); // NOI18N

        lblExperiences.setFont(new java.awt.Font("Hiragino Mincho ProN", 0, 18)); // NOI18N
        lblExperiences.setForeground(new java.awt.Color(210, 180, 140));
        lblExperiences.setText("Established Year       |        Number Of Users       |      Years Of Experience ");

        lblExperiences1.setFont(new java.awt.Font("Hiragino Mincho ProN", 0, 18)); // NOI18N
        lblExperiences1.setForeground(new java.awt.Color(210, 180, 140));
        lblExperiences1.setText("      2018                                   50K                                7+ years ");

        lblCopyright1.setForeground(new java.awt.Color(204, 102, 0));
        lblCopyright1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCopyright1.setText("@WatchX. ALL RIGHTS RESERVED");

        javax.swing.GroupLayout pnlAboutUsLayout = new javax.swing.GroupLayout(pnlAboutUs);
        pnlAboutUs.setLayout(pnlAboutUsLayout);
        pnlAboutUsLayout.setHorizontalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutUsLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAboutUsHeading)
                    .addComponent(lblAboutUsWording, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblExperiences, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAboutUsWording4, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAboutUsWording1, javax.swing.GroupLayout.PREFERRED_SIZE, 1007, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAboutUsWording2)
                    .addComponent(lblAboutUsWording3)
                    .addGroup(pnlAboutUsLayout.createSequentialGroup()
                        .addComponent(lblAboutUsWording5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAboutUsWording6))
                    .addComponent(lblExperiences1, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAboutUsImage, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlAboutUsLayout.createSequentialGroup()
                .addComponent(lblCopyright1, javax.swing.GroupLayout.PREFERRED_SIZE, 1390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlAboutUsLayout.setVerticalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutUsLayout.createSequentialGroup()
                .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAboutUsLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(lblAboutUsHeading)
                        .addGap(18, 18, 18)
                        .addComponent(lblAboutUsWording)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblAboutUsWording2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAboutUsWording3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAboutUsWording1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAboutUsWording5)
                            .addComponent(lblAboutUsWording6))
                        .addGap(18, 18, 18)
                        .addComponent(lblAboutUsWording4)
                        .addGap(39, 39, 39)
                        .addComponent(lblExperiences, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblExperiences1))
                    .addGroup(pnlAboutUsLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(lblAboutUsImage, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61)
                .addComponent(lblCopyright1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(388, Short.MAX_VALUE))
        );

        tabPaneWatchInfo.addTab("About Us", pnlAboutUs);

        pnlWatchCollections.setBackground(new java.awt.Color(3, 37, 76));

        lblWatchdetails.setFont(new java.awt.Font("STIX Two Text", 1, 36)); // NOI18N
        lblWatchdetails.setForeground(new java.awt.Color(255, 153, 0));
        lblWatchdetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWatchdetails.setText("Watch Details");

        scrlPaneWatchInfo.setBackground(new java.awt.Color(255, 255, 255));

        tblWatchInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tblWatchInfo.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 12)); // NOI18N
        tblWatchInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial No", "Model No", "Name", "Brand", "Price", "Warranty"
            }
        ));
        tblWatchInfo.setGridColor(new java.awt.Color(0, 0, 0));
        tblWatchInfo.setSelectionBackground(new java.awt.Color(0, 0, 0));
        scrlPaneWatchDetails.setViewportView(tblWatchInfo);

        scrlPaneWatchInfo.setViewportView(scrlPaneWatchDetails);

        pnlForm.setBackground(new java.awt.Color(204, 102, 0));

        tfSerialNumber.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Serial Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("STIX Two Text", 0, 18), new java.awt.Color(3, 37, 76))); // NOI18N
        tfSerialNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSerialNumberActionPerformed(evt);
            }
        });

        tfModelNumber.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Model Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("STIX Two Text", 0, 18), new java.awt.Color(3, 37, 76))); // NOI18N

        tfName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("STIX Two Text", 0, 18), new java.awt.Color(3, 37, 76))); // NOI18N

        lblForm.setFont(new java.awt.Font("STIX Two Text", 1, 24)); // NOI18N
        lblForm.setText("Watch Details Form");

        tfBrand.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Brand", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("STIX Two Text", 0, 18))); // NOI18N
        tfBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBrandActionPerformed(evt);
            }
        });

        tfPrice.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("STIX Two Text", 0, 18))); // NOI18N
        tfPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPriceActionPerformed(evt);
            }
        });

        tfWarranty.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Warranty", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("STIX Two Text", 0, 18))); // NOI18N
        tfWarranty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfWarrantyActionPerformed(evt);
            }
        });

        btnAddWatch.setBackground(new java.awt.Color(0, 102, 153));
        btnAddWatch.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnAddWatch.setForeground(new java.awt.Color(255, 255, 255));
        btnAddWatch.setText("ADD");
        btnAddWatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddWatchActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 102, 153));
        btnUpdate.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(0, 102, 153));
        btnDelete.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnDisplay.setBackground(new java.awt.Color(0, 102, 153));
        btnDisplay.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnDisplay.setForeground(new java.awt.Color(255, 255, 255));
        btnDisplay.setText("DISPLAY");
        btnDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(0, 102, 153));
        btnClear.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFormLayout = new javax.swing.GroupLayout(pnlForm);
        pnlForm.setLayout(pnlFormLayout);
        pnlFormLayout.setHorizontalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfSerialNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(tfModelNumber)
                            .addComponent(tfName))
                        .addGap(34, 34, 34)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfBrand, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(tfPrice)
                            .addComponent(tfWarranty))
                        .addGap(51, 51, 51)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddWatch, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDisplay)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(lblForm)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFormLayout.setVerticalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblForm)
                .addGap(31, 31, 31)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfWarranty, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddWatch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        pnlAddUpdateDelete.setBackground(new java.awt.Color(0, 102, 153));
        pnlAddUpdateDelete.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnMergeSortBySerialNumber.setBackground(new java.awt.Color(153, 153, 153));
        btnMergeSortBySerialNumber.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnMergeSortBySerialNumber.setText("Sort SerialNumber");
        btnMergeSortBySerialNumber.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMergeSortBySerialNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMergeSortBySerialNumberActionPerformed(evt);
            }
        });

        btnSelectionSortByPrice.setBackground(new java.awt.Color(153, 153, 153));
        btnSelectionSortByPrice.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnSelectionSortByPrice.setText("Sort Price");
        btnSelectionSortByPrice.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnSelectionSortByPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectionSortByPriceActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(153, 153, 153));
        btnSearch.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAddUpdateDeleteLayout = new javax.swing.GroupLayout(pnlAddUpdateDelete);
        pnlAddUpdateDelete.setLayout(pnlAddUpdateDeleteLayout);
        pnlAddUpdateDeleteLayout.setHorizontalGroup(
            pnlAddUpdateDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddUpdateDeleteLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(pnlAddUpdateDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddUpdateDeleteLayout.createSequentialGroup()
                        .addComponent(btnMergeSortBySerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddUpdateDeleteLayout.createSequentialGroup()
                        .addGroup(pnlAddUpdateDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSelectionSortByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39))))
        );
        pnlAddUpdateDeleteLayout.setVerticalGroup(
            pnlAddUpdateDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddUpdateDeleteLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnMergeSortBySerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSelectionSortByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        lblErrorMessage.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblErrorMessage.setForeground(new java.awt.Color(255, 255, 255));
        lblErrorMessage.setText("         ");
        lblErrorMessage.setBorder(new javax.swing.border.MatteBorder(null));

        txtFldSearch.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        txtFldSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("ITF Devanagari Marathi", 1, 14))); // NOI18N

        javax.swing.GroupLayout pnlWatchCollectionsLayout = new javax.swing.GroupLayout(pnlWatchCollections);
        pnlWatchCollections.setLayout(pnlWatchCollectionsLayout);
        pnlWatchCollectionsLayout.setHorizontalGroup(
            pnlWatchCollectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWatchCollectionsLayout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addGroup(pnlWatchCollectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlWatchCollectionsLayout.createSequentialGroup()
                        .addComponent(lblWatchdetails, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146)
                        .addComponent(txtFldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlWatchCollectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(scrlPaneWatchInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 1122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlWatchCollectionsLayout.createSequentialGroup()
                            .addGap(58, 58, 58)
                            .addComponent(pnlForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(34, 34, 34)
                            .addComponent(pnlAddUpdateDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(291, 291, 291)
                .addComponent(lblErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(428, 428, Short.MAX_VALUE))
        );
        pnlWatchCollectionsLayout.setVerticalGroup(
            pnlWatchCollectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWatchCollectionsLayout.createSequentialGroup()
                .addGroup(pnlWatchCollectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlWatchCollectionsLayout.createSequentialGroup()
                        .addComponent(lblErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 30, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWatchCollectionsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlWatchCollectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFldSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWatchdetails, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrlPaneWatchInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlWatchCollectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlWatchCollectionsLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(pnlAddUpdateDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlWatchCollectionsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(pnlForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(460, 460, 460))
        );

        tabPaneWatchInfo.addTab("Collections", pnlWatchCollections);

        pnlContactUs.setBackground(new java.awt.Color(3, 37, 76));

        lblContactImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WatchIS/resources/contact.jpg"))); // NOI18N
        lblContactImage.setText("jLabel3");

        lblContactHeading.setFont(new java.awt.Font("Kannada MN", 1, 36)); // NOI18N
        lblContactHeading.setForeground(new java.awt.Color(255, 255, 255));
        lblContactHeading.setText("Contact Us");

        pnlContact.setBackground(new java.awt.Color(255, 153, 0));

        txtFldName.setBackground(new java.awt.Color(3, 37, 76));
        txtFldName.setForeground(new java.awt.Color(255, 255, 255));
        txtFldName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtFldName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("ITF Devanagari", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        txtFldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldNameActionPerformed(evt);
            }
        });

        txtFldEmail.setBackground(new java.awt.Color(3, 37, 76));
        txtFldEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtFldEmail.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtFldEmail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "E-mail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("ITF Devanagari", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        txtFldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldEmailActionPerformed(evt);
            }
        });

        lblContactFill.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 24)); // NOI18N
        lblContactFill.setForeground(new java.awt.Color(255, 255, 255));
        lblContactFill.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblContactFill.setText("Leave Us Message");

        TxtAreaMessage.setBackground(new java.awt.Color(3, 37, 76));
        TxtAreaMessage.setColumns(20);
        TxtAreaMessage.setForeground(new java.awt.Color(255, 255, 255));
        TxtAreaMessage.setRows(5);
        TxtAreaMessage.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Message", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("ITF Devanagari Marathi", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jScrollPane1.setViewportView(TxtAreaMessage);

        btnSend.setFont(new java.awt.Font("Devanagari MT", 1, 24)); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlContactLayout = new javax.swing.GroupLayout(pnlContact);
        pnlContact.setLayout(pnlContactLayout);
        pnlContactLayout.setHorizontalGroup(
            pnlContactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblContactFill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlContactLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(pnlContactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFldName, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContactLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );
        pnlContactLayout.setVerticalGroup(
            pnlContactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContactLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(lblContactFill)
                .addGap(18, 18, 18)
                .addComponent(txtFldName, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(txtFldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlContactUsLayout = new javax.swing.GroupLayout(pnlContactUs);
        pnlContactUs.setLayout(pnlContactUsLayout);
        pnlContactUsLayout.setHorizontalGroup(
            pnlContactUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContactUsLayout.createSequentialGroup()
                .addGroup(pnlContactUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlContactUsLayout.createSequentialGroup()
                        .addGap(491, 491, 491)
                        .addComponent(lblContactHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlContactUsLayout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(pnlContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addComponent(lblContactImage, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        pnlContactUsLayout.setVerticalGroup(
            pnlContactUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContactUsLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(lblContactHeading)
                .addGroup(pnlContactUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlContactUsLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(pnlContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlContactUsLayout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(lblContactImage, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(496, Short.MAX_VALUE))
        );

        tabPaneWatchInfo.addTab("Contact Us", pnlContactUs);

        javax.swing.GroupLayout pnlWatchInfoScreenLayout = new javax.swing.GroupLayout(pnlWatchInfoScreen);
        pnlWatchInfoScreen.setLayout(pnlWatchInfoScreenLayout);
        pnlWatchInfoScreenLayout.setHorizontalGroup(
            pnlWatchInfoScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWatchInfoScreenLayout.createSequentialGroup()
                .addGroup(pnlWatchInfoScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMainBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlWatchInfoScreenLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(tabPaneWatchInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlWatchInfoScreenLayout.setVerticalGroup(
            pnlWatchInfoScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWatchInfoScreenLayout.createSequentialGroup()
                .addComponent(pnlMainBar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabPaneWatchInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 1190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(215, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WatchIS");
        setBounds(new java.awt.Rectangle(0, 0, 1500, 1200));
        setMinimumSize(new java.awt.Dimension(1500, 1200));
        setSize(new java.awt.Dimension(1500, 1200));

        pnlMainScreen.setBackground(new java.awt.Color(3, 37, 76));
        pnlMainScreen.setBounds(new java.awt.Rectangle(0, 0, 1500, 1200));
        pnlMainScreen.setMaximumSize(new java.awt.Dimension(1500, 1200));
        pnlMainScreen.setMinimumSize(new java.awt.Dimension(1500, 1200));
        pnlMainScreen.setPreferredSize(new java.awt.Dimension(1500, 1200));

        lblLogoImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogoImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/WatchIS/resources/WatchLogo.png"))); // NOI18N
        lblLogoImage.setBounds(new java.awt.Rectangle(700, 0, 42, 17));

        lblWelcomePage.setFont(new java.awt.Font("Kannada MN", 1, 36)); // NOI18N
        lblWelcomePage.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcomePage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWelcomePage.setText("WELCOME TO OUR PAGE");

        lblWait.setFont(new java.awt.Font("Kannada MN", 1, 24)); // NOI18N
        lblWait.setForeground(new java.awt.Color(255, 255, 255));
        lblWait.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWait.setText("Please Wait.........................");

        lblWelcomeDescription.setBackground(new java.awt.Color(51, 51, 0));
        lblWelcomeDescription.setFont(new java.awt.Font("Kannada MN", 0, 13)); // NOI18N
        lblWelcomeDescription.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcomeDescription.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWelcomeDescription.setText("Here, you will get your desired watch in best quality and valuable prices with warranty cards.");

        lblMotto.setFont(new java.awt.Font("Herculanum", 1, 24)); // NOI18N
        lblMotto.setForeground(new java.awt.Color(255, 204, 0));
        lblMotto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMotto.setText("\"YOUR WRIST DESERVES THE BEST\"");

        javax.swing.GroupLayout pnlMainScreenLayout = new javax.swing.GroupLayout(pnlMainScreen);
        pnlMainScreen.setLayout(pnlMainScreenLayout);
        pnlMainScreenLayout.setHorizontalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWelcomePage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLogoImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMotto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                .addGap(0, 408, Short.MAX_VALUE)
                .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(400, 400, 400))
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWelcomeDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                        .addComponent(lblWait, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        pnlMainScreenLayout.setVerticalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(lblWelcomePage, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblWelcomeDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblLogoImage, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMotto, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblWait, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(486, 486, 486))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Adding panels with unique identifiers
        getContentPane().add(pnlLoginScreen, "LoginScreen");
        getContentPane().add(pnlMainScreen, "MainScreen");
        getContentPane().add(pnlWatchInfoScreen, "WatchInfoScreen");

        // Starting it with the MainScreen
        cardLayout.show(getContentPane(), "MainScreen");
    }

    private void Progress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i);
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                pgBarSplashScreen.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen");  // Switch to login screen
            }
        };
        worker.execute();
    }

    // Method to add watch data and populate the table 
    private void watchTabelInfo(WatchIS watch) {
        watchIS.add(watch);
        DefaultTableModel data = (DefaultTableModel) tblWatchInfo.getModel();
        data.addRow(new Object[]{
            watch.getSerialNumber(), watch.getModelNumber(), watch.getName(), watch.getBrand(), watch.getPrice(), watch.getWarranty()
        });
    }

    private void initializeWatchData() {
        watchIS = new LinkedList<>();
        // Adding watch data in Table
        watchTabelInfo(new WatchIS(1, 123, "Rolex", "Swiss Luxury", 230000, "2 years"));
        watchTabelInfo(new WatchIS(2, 124, "Omega", "Swiss Luxury", 130000, "1 years"));
        watchTabelInfo(new WatchIS(3, 125, "Cartier", "French Luxury", 140000, "2 years"));
        watchTabelInfo(new WatchIS(4, 126, "Audemars Piguet", "French Luxury", 170000, "2 years"));
        watchTabelInfo(new WatchIS(5, 127, "Patek Philippe", "Reverso", 140000, "2 years"));
    }
    private void txtFldUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldUserNameActionPerformed
    // Method to switch screens
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        // Get the username and password input
        String username = txtFldUserName.getText();
        String password = new String(pwdFldPassword.getPassword());

        // Check if username or password is empty
        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "\"Please fill in both the username and password.\"");
        } // Check if username and password are incorrect
        else if (!username.equals("santoshi") || !password.equals("santoshi")) {
            JOptionPane.showMessageDialog(this, "The Input Does Not Matches. Please Try Again");
        } // If credentials are correct, proceed to load the WatchInfo screen
        else {

            loadScreen("WatchInfoScreen"); // Load the WatchInfo screen
        }

    }//GEN-LAST:event_btnLoginActionPerformed

    private void ckBoxRememberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBoxRememberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckBoxRememberActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        pwdFldPassword.setText("");
        txtFldUserName.setText("");
        loadScreen("LoginScreen"); // Load the main screen
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void txtFldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldNameActionPerformed

    private void txtFldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldEmailActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSendActionPerformed

    private void tfBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBrandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBrandActionPerformed

    private void tfPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPriceActionPerformed

    private void tfWarrantyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfWarrantyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfWarrantyActionPerformed

    private void btnAddWatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddWatchActionPerformed
        // Initialize validation status
        boolean isValid = true;
        // Check if all fields are empty
        if (tfSerialNumber.getText().isEmpty()
                || tfModelNumber.getText().isEmpty()
                || tfName.getText().isEmpty()
                || tfBrand.getText().isEmpty()
                || tfPrice.getText().isEmpty()
                || tfWarranty.getText().isEmpty()) {

            // Display a single message for all empty fields
            showDialogBox("All fields must be filled in. Please complete all fields.", "Validation Failed", JOptionPane.ERROR_MESSAGE);
            lblErrorMessage.setVisible(true);
            isValid = false;
        } else {
            // Validate the Serial Number field
            boolean isValidSerialNumber = ValidationUtil.isValidSerialNumber(tfSerialNumber.getText());
            if (tfSerialNumber.getText().length() > 2 || !isValidSerialNumber) {
                // Check for model number having at least 4 digits
                showDialogBox("Check: Serial number must be 1 0r 2 digits or Serial number can only be in number.", "Validation Failed", JOptionPane.ERROR_MESSAGE);
                lblErrorMessage.setVisible(true);
                isValid = false;
            } else {
                isValid &= validateField(
                        tfSerialNumber,
                        "Serial Number",
                        lblErrorMessage,
                        "Invalid Serial Number format.",
                        isValidSerialNumber
                );
            }
            // Validate Model Number
            boolean isValidModelNumber = ValidationUtil.isValidModelNumber(tfModelNumber.getText());
            if (tfModelNumber.getText().length() < 3 || !isValidModelNumber) {
                // Check for model number having at least 4 digits
                showDialogBox("Check: Model number can only be in Number or Model number must be 3 digits.", "Validation Failed", JOptionPane.ERROR_MESSAGE);
                lblErrorMessage.setVisible(true);
                isValid = false;
            } else {
                isValid &= validateField(
                        tfModelNumber,
                        "Model Number",
                        lblErrorMessage,
                        "Must contain only numbers.",
                        isValidModelNumber
                );
            }
            // Validate Name
            boolean isValidName = ValidationUtil.isValidName(tfName.getText());
            if (!isValidName) {
                showDialogBox("Name must contain only alphabets. Please enter a valid name.", "Validation Failed", JOptionPane.ERROR_MESSAGE);
                lblErrorMessage.setVisible(true);
                isValid = false;
            } else {
                isValid &= validateField(
                        tfName,
                        "Name",
                        lblErrorMessage,
                        "Must contain only alphabets",
                        isValidName
                );
            }
            // Validate Brand
            boolean isValidBrand = ValidationUtil.isValidBrand(tfBrand.getText());
            isValid &= validateField(
                    tfBrand,
                    "Brand",
                    lblErrorMessage,
                    "Must be only alphabets",
                    isValidBrand
            );
            // Validate price
            boolean isValidPrice = ValidationUtil.isValidPrice(tfPrice.getText());
            // Validate that the Price contains only numbers
            if (!isValidPrice) {
                showDialogBox("Price must be a valid number. Please enter a numeric value.", "Validation Failed", JOptionPane.ERROR_MESSAGE);
                lblErrorMessage.setVisible(true);
                isValid = false;
            } else {
                isValid &= validateField(
                        tfPrice,
                        "Price",
                        lblErrorMessage,
                        "Must contain only numbers.",
                        isValidPrice
                );
            }
            // Validate Warranty
            boolean isValidWarranty = ValidationUtil.isValidWrranty(tfWarranty.getText());
            isValid &= validateField(
                    tfWarranty,
                    "Warranty",
                    lblErrorMessage,
                    "Warranty must be a valid time period",
                    isValidWarranty
            );
            // If all fields are valid, proceed with adding the watch
            if (isValid) {
                // Create a watchIS instance
                WatchIS newwatch = new WatchIS(
                        Integer.parseInt(tfSerialNumber.getText().trim()),
                        Integer.parseInt(tfModelNumber.getText().trim()),
                        tfName.getText().trim(),
                        tfBrand.getText().trim(),
                        Double.parseDouble(tfPrice.getText().trim()),
                        tfWarranty.getText().trim()
                );
                if (checkDuplicateWatch(newwatch)) {
                    showDialogBox("Model Number or Serial Number already exists.", "Duplicate Entry", JOptionPane.ERROR_MESSAGE);
                } else {
                    // Add the watch if no duplicate is found
                    watchIS.add(newwatch);
                    clearWatchForm();
                    loadListToTable(watchIS);
                    showDialogBox("Watch Information added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
                // If validation fails, show this dialog box
                if (!isValid) { // Assuming 'isValid' is the validation condition
                    showDialogBox("Please enter the asked value in the text field correctly.", "Validation Failed", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnAddWatchActionPerformed
    private boolean validateField(JTextField textField, String fieldName, JLabel errorLbl, String errorMsg, boolean isValidFormat) {
        // Check if the text field is empty
        if (ValidationUtil.isNullOrEmpty(textField.getText())) {
            errorLbl.setText("Textfields cannot be empty!");  // Display a specific message for this field
            errorLbl.setVisible(false);
            // Hide the error message after 3 seconds (3000 milliseconds)
            Timer timer = new Timer(1000, e -> errorLbl.setVisible(false));
            timer.setRepeats(false); // Ensure the timer only runs once
            timer.start();
            return false;
        } else if (!isValidFormat) {  // Check if the input format is invalid
            errorLbl.setText(errorMsg);  // Display the provided error message
            errorLbl.setVisible(true);
            // Hide the error message after 3 seconds (3000 milliseconds)
            Timer timer = new Timer(1000, e -> errorLbl.setVisible(false));
            timer.setRepeats(false); // Ensure the timer only runs once
            timer.start();
            return false;
        } else {
            errorLbl.setVisible(false);  // Hide error message if valid
            return true;
        }
    }

    private void showDialogBox(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(this, message, title, messageType);
    }

    private boolean checkDuplicateWatch(WatchIS watch) {
        return watchIS.stream()
                .anyMatch(existingWatch
                        -> existingWatch.getSerialNumber() == watch.getSerialNumber()
                || existingWatch.getModelNumber() == watch.getModelNumber());
    }

    private void clearWatchForm() {
        tfSerialNumber.setText("");
        tfModelNumber.setText("");
        tfName.setText("");
        tfBrand.setText("");
        tfPrice.setText("");
        tfWarranty.setText("");
        txtFldSearch.setText("");
    }

    private void loadListToTable(List<WatchIS> watchIS) {
        DefaultTableModel model = (DefaultTableModel) tblWatchInfo.getModel();
        // Clear existing rows if needed
        model.setRowCount(0);

        // Populate the table with watch data
        watchIS.forEach(watch -> model.addRow(new Object[]{
            watch.getSerialNumber(),
            watch.getModelNumber(),
            watch.getName(),
            watch.getBrand(),
            watch.getPrice(),
            watch.getWarranty(),}));
    }

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // Initialize validation status
        boolean isValid = true;
        // Check if all fields are empty
        if (tfSerialNumber.getText().isEmpty()
                || tfModelNumber.getText().isEmpty()
                || tfName.getText().isEmpty()
                || tfBrand.getText().isEmpty()
                || tfPrice.getText().isEmpty()
                || tfWarranty.getText().isEmpty()) {
            // Display a single message for all empty fields
            showDialogBox("All fields must be filled in. Please complete all fields.", "Validation Failed", JOptionPane.ERROR_MESSAGE);
            lblErrorMessage.setVisible(true);
            isValid = false;
        } else {
            int selectedRowIndex = tblWatchInfo.getSelectedRow();

            // Ensure a row is selected
            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(null, "Please select a watch to update.", "Selection Error", JOptionPane.ERROR_MESSAGE);
                return; // Exit early if no row is selected
            }
            try {
                // Retrieve the watch object from the ArrayList
                WatchIS watchToUpdate = watchIS.get(selectedRowIndex);

                try {
                    // Validate and set Serial Number
                    int serialNumber = Integer.parseInt(tfSerialNumber.getText().trim());
                    boolean serialExists = watchIS.stream()
                            .anyMatch(watch -> watch.getSerialNumber() == serialNumber && watch != watchToUpdate);
                    if (serialExists) {
                        JOptionPane.showMessageDialog(null, "Serial number already exists. Please enter a unique serial number.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                        isValid = false;
                    } else {
                        watchToUpdate.setSerialNumber(serialNumber);
                    }
                    // Validate and set Model Number
                    int modelNumber = Integer.parseInt(tfModelNumber.getText().trim());
                    if (String.valueOf(modelNumber).length() < 3) {
                        JOptionPane.showMessageDialog(null, "Model number must be at least 3 digits.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                        isValid = false;
                    } else if (watchIS.stream().anyMatch(watch -> watch.getModelNumber() == modelNumber && watch != watchToUpdate)) {
                        JOptionPane.showMessageDialog(null, "Model number already exists. Please enter a unique model number.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                        isValid = false;
                    } else {
                        watchToUpdate.setModelNumber(modelNumber);
                    }
                    boolean isValidName = ValidationUtil.isValidName(tfName.getText());
                    // Validate and set Name
                    String name = tfName.getText().trim();
                    if (!isValidName) {
                        showDialogBox("Name must contain only alphabets. Please enter a valid name.", "Validation Failed", JOptionPane.ERROR_MESSAGE);
                        lblErrorMessage.setVisible(true);
                        isValid = false;
                    } else {
                        watchToUpdate.setName(name);
                    }
                    // Validate and set Brand
                    String brand = tfBrand.getText().trim();
                    if (brand.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Brand cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                        isValid = false;
                    } else {
                        watchToUpdate.setBrand(brand);
                    }
                    // Validate and set Price
                    double price = Double.parseDouble(tfPrice.getText().trim());
                    if (price <= 0) {
                        JOptionPane.showMessageDialog(null, "Price must be greater than zero.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                        isValid = false;
                    } else {
                        watchToUpdate.setPrice(price);
                    }
                    // Validate and set Warranty
                    String warranty = tfWarranty.getText().trim();
                    if (warranty.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Warranty cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                        isValid = false;
                    } else {
                        watchToUpdate.setWarranty(warranty);
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric values for Serial Number, Model Number, and Price.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                    isValid = false;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "An unexpected error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    isValid = false;
                }
                // Perform actions only if all validations pass
                if (isValid) {
                    // Reload the table to reflect updated data
                    loadListToTable(watchIS);
                    // Clear form after updating
                    clearWatchForm();
                    // Show success message
                    JOptionPane.showMessageDialog(null, "Watch Information updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                // Handle potential errors
                JOptionPane.showMessageDialog(null, "An error occurred while updating the watch. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        // Get the selected row index
        int selectedRowIndex = tblWatchInfo.getSelectedRow();
        // Check if a row is selected
        if (selectedRowIndex < 0) {
            showDialogBox("Please select a watch entry to delete.", "No Selection", JOptionPane.WARNING_MESSAGE);
            return;
        }
        // Confirm the delete operation
        int confirmation = JOptionPane.showConfirmDialog(
                null,
                "Are you sure you want to delete this watch?",
                "Confirm Delete",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
        );
        // If the user confirms, proceed with deletion
        if (confirmation == JOptionPane.YES_OPTION) {
            try {
                // Remove the corresponding entry from the ArrayList (watchIS)
                WatchIS watchToDelete = watchIS.get(selectedRowIndex); // Retrieve the watch object
                watchIS.remove(selectedRowIndex); // Remove it from the List
                // Remove the selected row from the table model
                DefaultTableModel model = (DefaultTableModel) tblWatchInfo.getModel();
                model.removeRow(selectedRowIndex);

                // Reload the table to reflect the changes
                loadListToTable(watchIS);
                // Show success message
                showDialogBox(
                        "Watch entry with Model Number: " + watchToDelete.getModelNumber() + " deleted successfully.",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE
                );
            } catch (Exception e) {
                // Handle potential errors
                showDialogBox("An error occurred while deleting the watch. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tfSerialNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSerialNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSerialNumberActionPerformed

    private void btnDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayActionPerformed
        // Ensure a row is selected in the table
        int selectedRowIndex = tblWatchInfo.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a watch from the table.", "No Selection", JOptionPane.WARNING_MESSAGE);
            return; // Exit if no row is selected
        }
        try {
            // Retrieve the watch object from the LinkedList using the selected row index
            WatchIS display = watchIS.get(selectedRowIndex);

            // Prepare the watch details for display
            String watchDetails = String.format(
                    "Serial Number: %d\nModel Number: %d\nName: %s\nBrand: %s\nPrice: %.2f\nWarranty: %s",
                    display.getSerialNumber(),
                    display.getModelNumber(),
                    display.getName(),
                    display.getBrand(),
                    display.getPrice(),
                    display.getWarranty()
            );
            // Display the watch details in a dialog box
            JOptionPane.showMessageDialog(null, watchDetails, "Watch Details", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            // Handle any potential errors
            JOptionPane.showMessageDialog(null, "An error occurred while retrieving the watch details: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDisplayActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearWatchForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnMergeSortBySerialNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMergeSortBySerialNumberActionPerformed
        // TODO add your handling code here:
        List<WatchIS> sortedList = mergeSort.sortBySerialNumber(watchIS, false);
        loadListToTable(sortedList);
    }//GEN-LAST:event_btnMergeSortBySerialNumberActionPerformed

    private void btnSelectionSortByPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectionSortByPriceActionPerformed
        // TODO add your handling code here:
        List<WatchIS> sortedList = selectionSort.sortByPrice(watchIS, false);
        loadListToTable(sortedList);
    }//GEN-LAST:event_btnSelectionSortByPriceActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String name = txtFldSearch.getText().trim(); // Get the name input from the text field

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a name to search for.");
            return;
        }
         List<WatchIS> sortedList = selectionSort.sortByName(watchIS, false);
        // Perform binary search for the watch with the entered name
        WatchIS search = binarySearch.searchByName(sortedList, name);
        loadListToTable(sortedList);

        // Show result
        if (search != null) {
            JOptionPane.showMessageDialog(this, "Found: " + search.getName() + " - " + search.getBrand());
        } else {
            JOptionPane.showMessageDialog(this, "Watch with name '" + name + "' not found.");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Watch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Watch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Watch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Watch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        Watch IS = new Watch();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            IS.setVisible(true);
        });
        IS.Progress();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Watch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TxtAreaMessage;
    private javax.swing.JButton btnAddWatch;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDisplay;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnMergeSortBySerialNumber;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSelectionSortByPrice;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox ckBoxRemember;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl5k;
    private javax.swing.JLabel lblAboutUsHeading;
    private javax.swing.JLabel lblAboutUsImage;
    private javax.swing.JLabel lblAboutUsWording;
    private javax.swing.JLabel lblAboutUsWording1;
    private javax.swing.JLabel lblAboutUsWording2;
    private javax.swing.JLabel lblAboutUsWording3;
    private javax.swing.JLabel lblAboutUsWording4;
    private javax.swing.JLabel lblAboutUsWording5;
    private javax.swing.JLabel lblAboutUsWording6;
    private javax.swing.JLabel lblContactFill;
    private javax.swing.JLabel lblContactHeading;
    private javax.swing.JLabel lblContactImage;
    private javax.swing.JLabel lblCopyright;
    private javax.swing.JLabel lblCopyright1;
    private javax.swing.JLabel lblErrorMessage;
    private javax.swing.JLabel lblExperiences;
    private javax.swing.JLabel lblExperiences1;
    private javax.swing.JLabel lblForgotPassword;
    private javax.swing.JLabel lblForm;
    private javax.swing.JLabel lblHomeImage;
    private javax.swing.JLabel lblHomeWatchImage;
    private javax.swing.JLabel lblHomeWording;
    private javax.swing.JLabel lblHomeWording1;
    private javax.swing.JLabel lblHomeWording2;
    private javax.swing.JLabel lblHomeWording4;
    private javax.swing.JLabel lblInfoscreenLogo;
    private javax.swing.JLabel lblLoginDesc;
    private javax.swing.JLabel lblLoginImage;
    private javax.swing.JLabel lblLoginLogoImage;
    private javax.swing.JLabel lblLoginTitle;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblLogoImage;
    private javax.swing.JLabel lblMatteWork;
    private javax.swing.JLabel lblMotto;
    private javax.swing.JLabel lblSale;
    private javax.swing.JLabel lblTimex;
    private javax.swing.JLabel lblWait;
    private javax.swing.JLabel lblWarranty;
    private javax.swing.JLabel lblWatchImage;
    private javax.swing.JLabel lblWatchImageHome;
    private javax.swing.JLabel lblWatchdetails;
    private javax.swing.JLabel lblWelcomeDescription;
    private javax.swing.JLabel lblWelcomePage;
    private javax.swing.JLabel lblYears;
    private javax.swing.JLabel lblhomeWording5;
    private javax.swing.JProgressBar pgBarSplashScreen;
    private javax.swing.JPanel pnlAboutUs;
    private javax.swing.JPanel pnlAddUpdateDelete;
    private javax.swing.JPanel pnlContact;
    private javax.swing.JPanel pnlContactUs;
    private javax.swing.JPanel pnlForm;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlHomeDetails;
    private javax.swing.JPanel pnlLoginImage;
    private javax.swing.JPanel pnlLoginLogo;
    private javax.swing.JPanel pnlLoginScreen;
    private javax.swing.JPanel pnlMainBar;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JPanel pnlWatchCollections;
    private javax.swing.JPanel pnlWatchInfoScreen;
    private javax.swing.JPasswordField pwdFldPassword;
    private javax.swing.JScrollPane scrlPaneWatchDetails;
    private javax.swing.JScrollPane scrlPaneWatchInfo;
    private javax.swing.JTabbedPane tabPaneWatchInfo;
    private javax.swing.JTable tblWatchInfo;
    private javax.swing.JTextField tfBrand;
    private javax.swing.JTextField tfModelNumber;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfSerialNumber;
    private javax.swing.JTextField tfWarranty;
    private javax.swing.JTextField txtFldEmail;
    private javax.swing.JTextField txtFldName;
    private javax.swing.JTextField txtFldSearch;
    private javax.swing.JTextField txtFldUserName;
    // End of variables declaration//GEN-END:variables
}
